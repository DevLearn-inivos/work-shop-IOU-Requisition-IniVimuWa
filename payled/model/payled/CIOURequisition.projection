projection CIOURequisition;
component PAYLED;
layer Cust;
description " ";
category Users;

--------------------------------- FRAGMENTS ---------------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset IOURequisitionSet for CIouRequisition;
entityset IOURequisitionLineSet for CIouRequisitionLine;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CIouRequisition {

   attribute CIouNumber Number {
      label = "IOU Number";
   }

   //attribute CBranchManager Boolean("TRUE", "FALSE");
   /*reference IouNuberRef(CIouNumber) to IouAmount(NextVal) {
      label = "IOU Number";
   }*/
   reference CashAccountRef(CashAc) to CashAccount(InstituteId) {
      label = "Cash Accounts";
   }
   @DynamicComponentDependency PERSON
   reference RequestedByRef(RequestedBy) to CompanyPerson(EmpNo) {
      label = "Requested By";
   }
   @DynamicComponentDependency MPCCOM
   reference CBranchManagerRef(BranchManager) to BranchmanagersLov(Userid) {
      label = "Branch Manager";
   }
   @DynamicComponentDependency MPCCOM
   reference SiteRef(Site) to SiteLov(Contract);
}
@Override
entity CIouRequisitionLine {
   attribute TotalSpentAmount Number {
      required = [false];
      format = ifscurrency;
      fetch = "nvl(C_Iou_Requisition_API.Get_Total_Spent_Amount(c_iou_number),0)";
      updatable = [false];
   }
   attribute OverUtilizedAmount Number {
      required = [false];
      format = ifscurrency;
      fetch = "nvl(C_Iou_Requisition_API.Get_Utilized_Amount(c_iou_number),0)";
      updatable = [false];
   }
   attribute UnderUtilizedAmount Number {
      required = [false];
      format = ifscurrency;
      fetch = "nvl(C_Iou_Requisition_API.Get_Utilized_Amount(c_iou_number),0)";
      updatable = [false];
   }
   --array CIouRequisitionArray(CIouNumber) to CIouRequisitionLine(CIouNumber);
}
------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------
@DynamicComponentDependency MPCCOM
query BranchmanagersLov {
   from = "user_allowed_site";
   where = "c_branch_manager in ('True')";

   attribute Userid Text;
}
query SiteLov {
   from = "Sites_View_Public";
   attribute Contract Text;
}
//query IouAmount {
//   attribute NextVal Number {
//      fetch = "nvl(C_Iou_Requisition_API.Get_Iou_Number,0)";
//   }
//}

---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------


--------------------------------- VIRTUALS ----------------------------------


--------------------------------- SUMMARIES ---------------------------------


-------------------------------- SINGLETONS ---------------------------------
